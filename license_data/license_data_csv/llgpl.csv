id,text,commercial_use,distribution,modification,private_use,patent_use,trademark_use,disclose_source,license_and_copyright_notice,same_license,state_changes,liability,warranty
1,the concept of the gnu lesser general public license version 21 lgpl has been adopted to govern the use and distribution of above  mentioned application,,,,,,,,,,,,
2,however the lgpl uses terminology that is more appropriate for a program written in c than one written in lisp,,,,,,,,,,,,
3,nevertheless the lgpl can still be applied to a lisp program if certain clarifications are made,,,,,,,,,,,,
4,accordingly the license for the open source lisp applications consists of this document plus the lgpl,,,,,,,,,,,,
5,wherever there is a conflict between this document and the lgpl this document takes precedence over the lgpl,,,,,,,,,,,,
6,a library in lisp is a collection of lisp functions data and foreign modules,,,,,,,,,,,,
7,the form of the library can be lisp source code for processing by an interpreter or object code usually the result of compilation of source code or built with some other mechanisms,,,,,,,,,,,,
8,foreign modules are object code in a form that can be linked into a lisp executable,,,,,,,,,,,,
9,when we speak of functions we do so in the most general way to include in addition methods and unnamed functions,,,,,,,,,,,,
10,lisp data is also a general term that includes the data structures resulting from defining lisp classes,,,,,,,,,,,,
11,a lisp application may include the same set of lisp objects as does a library but this does not mean that the application is necessarily a work based on the library it contains,,,,,,,,,,,,
12,the library consists of everything in the distribution file set before any modifications are made to the files,,,,,,,,,,,,
13,if any of the functions or classes in the library are redefined in other files then those redefinitions are considered a work based on the library,,,,,,,,,,,,
14,if additional methods are added to generic functions in the library those additional methods are not considered a work based on the library,,,,,,,,,,,,
15,if library classes are subclassed these subclasses are not considered a work based on the library,,,,,,,,,,,,
16,if the library is modified to explicitly call other functions that are neither part of lisp itself nor an available add on module to lisp then the functions called by the modified library are considered a work based on the library,,,,,,,,,,,,
17,the goal is to ensure that the library will compile and run without getting undefined function errors,,,,,,,,,,,,
18,it is permitted to add proprietary source code to the library but it must be done in a way such that the library will still run without that proprietary code present,,,,,,,,,,,,
19,section 5 of the lgpl distinguishes between the case of a library being dynamically linked at runtime and one being statically linked at build time,,,,,,,,,,,,
20,section 5 of the lgpl states that the former results in an executable that is a work that uses the library,,,,,,,,,,,,
21,section 5 of the lgpl states that the latter results in one that is a derivative of the library which is therefore covered by the lgpl,,,,,,,,,,,,
22,since lisp only offers one choice which is to link the library into an executable at build time we declare that for the purpose applying the lgpl to the library an executable that results from linking a work that uses the library with the library is considered a work that uses the library and is therefore not covered by the lgpl,,,,,,,,,,,,
23,because of this declaration section 6 of lgpl is not applicable to the library,,,,,,,,,,,,
